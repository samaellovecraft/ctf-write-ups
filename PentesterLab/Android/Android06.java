
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

class Android06 {

    public static void main(String[] args) {
        String encryptedString = "ygiG2VpgnW6z2ocCPEVaYhDwBs3UxZENbgh1iQJ6NhpBqHsczQsDh1rD3WjejQ7JH1o+lvBdtxhG64qyLQyHSg";
        byte[] decryptionKey = "__pentesterlab__".getBytes();
        String decryptedString = decrypt(encryptedString, decryptionKey);
        System.out.println("The key is: " + decryptedString);
    }

    public static String decrypt(String encryptedString, byte[] decryptionKey) {
        try {
            // Decode the Base64 encoded string
            byte[] cipherData = Base64.getDecoder().decode(encryptedString);

            // Extract the initialization vector (first 16 bytes)
            byte[] iv = new byte[16];
            System.arraycopy(cipherData, 0, iv, 0, iv.length);
            IvParameterSpec ivParameterSpec = new IvParameterSpec(iv);

            // Extract the encrypted message (remaining bytes)
            int cipherTextLength = cipherData.length - 16;
            byte[] cipherText = new byte[cipherTextLength];
            System.arraycopy(cipherData, 16, cipherText, 0, cipherTextLength);

            // Create SecretKeySpec using the decryption key
            SecretKeySpec secretKeySpec = new SecretKeySpec(decryptionKey, "AES");

            // Initialize the cipher for decryption
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
            cipher.init(Cipher.DECRYPT_MODE, secretKeySpec, ivParameterSpec);

            // Decrypt the string
            byte[] decryptedBytes = cipher.doFinal(cipherText);

            return new String(decryptedBytes);
        } catch (Exception exception) {
            return "";
        }
    }
}
